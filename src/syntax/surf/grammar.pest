//
// Created by intellij-pest on 2019-10-04
// narc-grammar
// Author: ice1000
//

WHITESPACE = _{ WHITE_SPACE | ("//" ~ (!NEWLINE ~ ANY)*) }

// Identifier
ident_char =
 _{ ASCII_ALPHA
  | "_"
  }
ident_raw = _{ ident_char ~ ident_following* }
ident_following =
 _{ ident_char
  | ASCII_DIGIT
  | "'"
  | "_"
  | "\\"
  }

///Darkgrey
ident = @{ ident_raw }

universe = @{ "Type" }
arrow = { "->" }
dot_projection = @{ "." ~ ident }

applied = { primary_expr | dot_projection }

multi_param = { ident+ ~ ":" ~ expr }
implicit = { "{" ~ multi_param ~ "}" }
explicit = { "(" ~ multi_param ~ ")" }
param =
 { implicit
 | explicit
 | app_expr // unnamed parameter
 }

//Placeholder
expr = { pi_expr }
pi_expr = { (param ~ arrow)* ~ app_expr }
app_expr = { primary_expr ~ applied }
primary_expr =
 { universe
 | ident
 | "(" ~ expr ~ ")"
 }

pattern =
 { inaccessible_pattern
 | constructor_pattern
 | atomic_pattern
 }

atomic_pattern = { ident }
constructor_pattern = { "(" ~ ident ~ pattern* ~ ")" }
// Using the notation from Agda's thesis
inaccessible_pattern = { "|_" ~ pattern ~ "_|" }

clause = { "clause" ~ ident ~ pattern* ~ "=" ~ expr ~ ";" }
definition = { "definition" ~ ident ~ ":" ~ expr ~ ";" }

decl =
 { definition
 | clause
 }

file = { "Hello World!" }
